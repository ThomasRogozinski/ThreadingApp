@{
    ViewBag.Title = "Monitor";
}
<div style="width: 50%; margin: 0 auto;">
    <p style="margin-top: 40px;">
        This example shows how synchronization can be accomplished using the lock and the Pulse method of the Monitor object.
        The Pulse method notifies a thread in the waiting queue of a change in the object's state.
        The example creates a Product object that has Consume and Produce methods.
        Producer object is using Product to Produce it and Consumer object is using Product to Consume it. The access of Producer and Consumer
        to core function of Product is synchronized with lock and the ready state is signalled with Monitor Pulse function.
    </p>
    <div id="heading" style="font-family: Tahoma; font-size: 0.9em; color: darkgray; margin-top: 20px; padding-bottom: 5px">
    </div>
    <div id="progressbar" style="width: 300px; height: 15px"></div>
    <br />
    <ul id="messages"></ul>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>

        $(function () {
            // initialize progress bar
            $("#progressbar").progressbar({ value: 0 });

            // initialize the connection to the server
            var threads = $.connection.threadsHub;

            // client-side sendMessage function that will be called from the server-side
            threads.client.showMessage = function (thread, message) {
                // Add the message to the page.
                $('#messages').append('<li><strong>' + thread + '</strong>: ' + message + '</li>');
            };

            threads.client.showProgress = function (value) {
                $("#heading").html(value + "%");
                $("#progressbar").progressbar("value", value);
            };

            // establish the connection to the server and start server-side operation
            $.connection.hub.start().done(function () {
                // call the method CallLongOperation defined in the Hub
                threads.server.runMonitorSample();
            });
        });

    </script>
}